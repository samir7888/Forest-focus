@use "../variables" as *;
@use "../mixins" as *;

.errorBoundary {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  padding: 2rem;
  background: linear-gradient(
    135deg,
    rgba(45, 90, 39, 0.1),
    rgba(74, 124, 89, 0.1)
  );
  border-radius: 12px;
  border: 2px solid rgba(45, 90, 39, 0.2);
}

.errorContainer {
  text-align: center;
  max-width: 500px;
  padding: 2rem;
  background: rgba(white, 0.9);
  border-radius: 16px;
  box-shadow: 0 8px 32px rgba(45, 90, 39, 0.15);
  backdrop-filter: blur(10px);
}

.errorIcon {
  font-size: 4rem;
  margin-bottom: 1rem;
  display: block;
}

.errorTitle {
  color: var(--primary-green);
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 1rem;
  font-family: var(--font-sans);
}

.errorMessage {
  color: var(--text-secondary);
  font-size: 1rem;
  line-height: 1.6;
  margin-bottom: 2rem;
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
}

.errorActions {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
}

.retryButton,
.reloadButton,
.refreshButton {
  @include button-base;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  font-weight: 500;
  transition: all 0.2s ease;
  cursor: pointer;
  border: none;
  font-size: 0.9rem;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(45, 90, 39, 0.3);
  }

  &:active {
    transform: translateY(0);
  }
}

.retryButton {
  background: var(--primary-green);
  color: white;

  &:hover {
    background: var(--primary-green-dark);
  }
}

.reloadButton,
.refreshButton {
  background: rgba(74, 124, 89, 0.1);
  color: var(--primary-green);
  border: 1px solid rgba(45, 90, 39, 0.3);

  &:hover {
    background: rgba(74, 124, 89, 0.2);
    border-color: var(--primary-green);
  }
}

.errorDetails {
  margin-top: 2rem;
  text-align: left;
  background: rgba(220, 53, 69, 0.05);
  border: 1px solid rgba(220, 53, 69, 0.2);
  border-radius: 8px;
  padding: 1rem;

  summary {
    cursor: pointer;
    font-weight: 500;
    color: var(--error);
    margin-bottom: 0.5rem;

    &:hover {
      color: var(--error-dark);
    }
  }
}

.errorStack {
  font-family: "Courier New", monospace;
  font-size: 0.8rem;
  color: var(--text-secondary);
  background: rgba(255, 255, 255, 0.8);
  padding: 1rem;
  border-radius: 4px;
  overflow-x: auto;
  white-space: pre-wrap;
  word-break: break-word;
  max-height: 200px;
  overflow-y: auto;
}

// Specialized fallback styles
.timerFallback,
.storageFallback {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 300px;
  padding: 1.5rem;
}

.fallbackContainer {
  text-align: center;
  max-width: 400px;
  padding: 1.5rem;
  background: rgba(white, 0.95);
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(45, 90, 39, 0.1);
}

.fallbackIcon {
  font-size: 3rem;
  margin-bottom: 1rem;
  display: block;
}

.fallbackTitle {
  color: var(--primary-green);
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.75rem;
  font-family: var(--font-sans);
}

.fallbackMessage {
  color: var(--text-secondary);
  font-size: 0.9rem;
  line-height: 1.5;
  margin-bottom: 1.5rem;
}

// Responsive design
@include mobile-only {
  .errorBoundary {
    padding: 1rem;
    min-height: 300px;
  }

  .errorContainer {
    padding: 1.5rem;
  }

  .errorTitle {
    font-size: 1.25rem;
  }

  .errorMessage {
    font-size: 0.9rem;
  }

  .errorActions {
    flex-direction: column;
    align-items: center;
  }

  .retryButton,
  .reloadButton,
  .refreshButton {
    width: 100%;
    max-width: 200px;
  }

  .fallbackContainer {
    padding: 1rem;
  }

  .fallbackTitle {
    font-size: 1.1rem;
  }

  .fallbackMessage {
    font-size: 0.85rem;
  }
}

@include tablet-only {
  .errorContainer {
    padding: 1.75rem;
  }
}
